import pandas as pd
import numpy as np
import csv
from tqdm import tqdm
import fastai
from fastai.tabular import *
from sklearn.metrics import roc_auc_score

def auc_score(y_pred,y_true,tens=True):
    score=roc_auc_score(y_true,torch.sigmoid(y_pred)[:,1])
    if tens:
        score=tensor(score)
    else:
        score=score
    return score


path = 'data/'

modelName = 'model2'
maxRows = 7853253

with open('data/'+ modelName + '.csv', 'w') as writer:
    writer.write('MachineIdentifier,HasDetections' + os.linesep)

test_df = pd.read_csv("data/4_test_features.csv", nrows=7853253)

print("Number of records loaded:", len(test_df))

data = TabularList.from_df(test_df)
learner = load_learner(path, fname=modelName, test=data) 

preds,y = learner.get_preds(ds_type=DatasetType.Test)

with open('data/'+ modelName + '.csv', 'a') as writer:
    print("Number of predictions: ", len(preds))
    for i in range(len(preds)):
        hasDetection = preds[i][1].numpy()
        #print(test_df.loc[i]['MachineIdentifier'], hasDetection)
        writer.write(str(test_df.iloc[i]['MachineIdentifier']))
        writer.write(",")
        writer.write(str(hasDetection))
        writer.write(os.linesep)

